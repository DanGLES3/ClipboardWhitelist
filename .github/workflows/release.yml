name: Release CI

on:
  push:
    tags:
      - '*'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Force fetch Tags
      run: |
        git fetch --tags --force

    - name: Get Tag
      id: var
      run: |
        echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
        echo "version=${GITHUB_REF#refs/*/v}" >> $GITHUB_OUTPUT
        {
          echo 'annotation<<EOF'
          git for-each-ref "${GITHUB_REF}" --format '%(contents)'
          echo 'EOF'
        } >> $GITHUB_OUTPUT

    - name: set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'adopt'
        cache: gradle

    - name: Write key
      run: |
        if [ ! -z "${{ secrets.SIGNING_KEY }}" ]; then
          echo STORE_PASSWORD='${{ secrets.KEY_STORE_PASSWORD }}' >> local.properties
          echo KEY_ALIAS='${{ secrets.ALIAS }}' >> local.properties
          echo KEY_PASSWORD='${{ secrets.KEY_PASSWORD }}' >> local.properties
          echo STORE_FILE_PATH='../release.keystore' >> local.properties
          echo ${{ secrets.SIGNING_KEY }} | base64 --decode > release.keystore
        fi

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew assembleRelease

    - name: Collect artifact name
      run: |
        echo "release_artifact=$(basename -s .apk app/build/outputs/apk/release/*.apk)" >> $GITHUB_ENV

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.release_artifact }}
        path: app/build/outputs/apk/release/*.apk

    - name: Upload Mapping
      uses: actions/upload-artifact@v4
      with:
        name: mapping
        path: app/build/outputs/mapping/release/mapping.txt

    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ steps.var.outputs.tag }}
        body: ${{ steps.var.outputs.annotation }}
        token: ${{ secrets.GH_TOKEN }}
        artifacts: "app/build/outputs/apk/release/*.apk,app/build/outputs/mapping/release/mapping.txt"
        allowUpdates: true
        removeArtifacts: true